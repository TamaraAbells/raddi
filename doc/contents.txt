Entry contents
==============										|

This specification is work in progress and subject to significant changes and extensions.

Technically, any binary data, up to maximum bytes, can follow properly constructed entry
header. This is further restricted by consensus and/or predefining binary blob at fixed
offset. The content is primarily considered to be unicode text encoded in UTF-8, no BOMs,
except where introduced by non-UTF-8 bytes; see decompression and extraction phase
description below. Certain code points also have specific meaning. Incorrectly formatted
message can be refused by a node.

The maximum size of content data, 65430, is calculated as:
	= 65534: 2B protocol frame size bytes, where FFFF value is reseved for keep-alive
	  reply, thus leaving FFFE as maximum frame size
	- 16 bytes encryption (AES256-GCM or XChaCha20-Poly1305) authentication tag bytes
	- 12 bytes entry identitier (also identites author)
	- 12 bytes parent entry identitier
	- 64 bytes of Ed25519ph signature

Note that there is mandatory variable-sized Cuckoo Cycle proof-of-work appended to each
entry. This ranges from 50 bytes (proof of length 12) to 170 bytes (proof of length 42).

The size is further restricted (including the size of proof-of-work) to:
	- 223 bytes for a new identity announcements
		- 32 bytes (first) carry identity public key that's used to verify user's
		  signatures
		- 50 ~ 170 bytes for proof-of-work
		- 53 bytes used for identity name, restricted by consensus
			- decompression/extraction and formatting not allowed in name
	- 255 bytes for a new channel announcement, restricted by consensus
		- 50 ~ 170 bytes for proof-of-work
		- 83 bytes used for channel name
			- decompression/extraction and formatting not allowed in name

Reasons for restricting above by consensus:
	- saving 4B of database storage per identity/channel; see raddi_database_row.h
	- keeping titles reasonable

Decompression phase:
--------------------
After successfully decompressing at least one of the following, the decompression phase
runs again, e.g. to decompress LZMA-compressed content encrypted in private message, etc.

Each of the following bytes is followed by 2B (LE) size information that must not exceed
the remaining size of the entry content. Segments unknown to the implementation should be
ignored.

Leading bytes:
	0xF8: reserved
	0xF9: reserved
	0xFA: ATTACHMENT
		- type interpreted by header
			- images (displayed aside the text):
				- PNG: 89 50 4E 47 0D 0A 1A 0A
				- GIF: 
				- JPG: FF D8 FF E0 00 10 4A 46 49 46
			- archives (display paperclip icon(s) to save):
				- ZIP: 50 4B
				- RAR: 52 61 72 21
				- 7z: 37 7A
				- xz: 
			- audio (play icon button or full player):
				- TODO: MP2/MP3/OGG?
			- other:
				- PDF: 25 50 44 46
				- XML: 3C 3F 78 6D 6C
					- further parsed?
	0xFB: reserved
	0xFC: COMPRESSED DATA, LZMA, optionally with predefined dictionary
		- after length informations, 2B code for predefined dictionary follows:
			- 00 00 - no dictionary
			- 65 6E - default english dictionary
			- adding more dictionaries should be coordinated
		- compressed data follows, typically just UTF-8 text, but may again
		  contain any of here defined leading bytes
	0xFD: reserved
	0xFE: ENCRYPTED DATA
		- content is encrypted by pre-shared per-channel key
		- TBD: crypto_stream/crypto_stream_xor - nonce is eid+parent
	0xFF: PRIVATE MESSAGE/REPLY
		- content is encrypted by target user's public key
		- TBD: crypto_sign_ed25519_pk_to_curve25519/crypto_box_easy

Extraction phase:
-----------------
Following code points are removed from displayed content but their meaning is interpreted
and applied according to user's client app settings.

Leading bytes:
	0x00: NUL, PROOF OF WORK
		- first NUL byte that does not belong to compressed chunk (above) or does
		  not terminate string code in this table terminates the entry and
		  introduces PoW; generally the entry is searched backwards for the proof
	0x06: ACK, ENDORSE
		- mod op
	0x07: BEL, REPORT
		- 
	0x08: BS, REVERT
		- 

	0x0B: VT, VOTE
		- followed by either: 1B code in predefined range 0x00..0x1F,
		  or by a NUL-terminated UTF-8 string describing the vote type
		- predefined vote codes:
			- 0x00: UP (generic agreement)
			- 0x01: DOWN (generic disagreement)
			- 0x02: INFO (considered informative, but user disagrees)
			- 0x03: FUNNY (user agrees, but it's joke, not informative)
		- predefined vote strings:
			- none, reserved for future extensions
	0x10: DLE, SIDEBAND DATA SET/EDIT
		- valid only if first byte in entry and if appears only once
		- valid only if direct descendant of the announcement it is affects
			- client app should apply change to thread or identity name (or
			  any other sideband data) only when made by it's author
			- client app should apply changes to channel title or sidebar (or
			  any other sideband data) only when made by a moderator which
			  the uses is subscribed to
		- sideband ID byte follows, predefined:
			- 0x01: title
				- change identity/channel/thread name/title
			- 0x02: ??? header ???
			- 0x03: ??? footer ???
			- 0x09: ??? title bar ???
			- 0x0B: sidebar - set/change identity/channel sidebar text
	0x15: NAK, REMOVED
		- mod op
		- 

	0x1A: SUB, EDIT
		- valid only when user edits his own entry; then the entry may contain
		  multiple EDITs which may not overlap
		- followed by 2×2B (offset + length into decompressed parent entry)
		  describing edited range and NUL-terminated text
		- NOTE: content outside EDITs should be appended to displayed
		        representation of the original content

Other code points with specific meaning:
----------------------------------------
Generally defines visual representation of text.

Code points:
	0x0001: SOH, heading, render until CAN
	0x0003: ETX, end of text, render "More..." button here and hide rest
	0x????: ???, spoiler, hidden by client app until intentionaly revealed
	0x000A: LF, newline
		- two LF in sequence should render as 3/4 line height space

Text formatting:
	0x0011: DC1, different font, serifs
	0x0012: DC2, different font, monospace
	0x0013: DC3, different font, handwriting
	0x0014: DC4, different font, reserved
	0x0018: CAN, cancels all formatting set up until that point
	0x001B: ESC
		- TODO: font size (relative)
		- TODO: bold, italic, underline, stikeout
		- TODO: spacing? rotation?
		- TODO: more intensive, or less (scale?)
		- TODO: color? semantic colors?

TODO: Use TAB, FS, GS, RS and US for simple tables
TODO: crosspost mark
TODO: junctions???
TODO: stream starts
TODO: mods: ban, move, merge, nsfw/nsfl, 
