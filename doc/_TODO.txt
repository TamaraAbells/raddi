TODO
====

next reddit post:
 - https://www.yours.org/@raddinet
 - raddi.com on builds

github repo:
 - raddi-builds-windows
   - release - installer exe in release, separated exe/dlls in subdirs
   - portable

common/string.h
 - string with platform-defined internal representation
   (UTF-16 on Windows, UTF-8 on Linux), auto converting
 - use for paths and everything
    - options?
    - node.cpp/raddi.com.cpp -> main args?

POW!!!
 - COMPRESSROUND reduces edge representation from > 4bytes to 4 bytes when #remaining edges is small enough to allow it.
    - this speeds up remaining trimming rounds.
 - XBITS determines granularity of bucketsort (using 2XBITS
 - SAVEEDGES allows instant recovery of edge indices of solutions, at cost of extra 1GB memory
    - so OFF?

perfect compression dictionary for english text
 - https://sourceforge.net/p/lzmautils/discussion/708858/thread/e40fbf99/
 - 1) open reddit export and extract body string
   2) replace unicode (\u1234) and escapes (\n or \") with actual unicode/control characters
   3) split to words (keep apostrophed words like can't or can\u2019t)
   4) for 'en' dictitonary drop words with unicode characters in it except \u2019 (maybe other?)
   5) compute freqency of words -> value
   6) reduce: remove words found in other words (affect value: avg, sum or max?)
   7) clamp: delete low values words, keep only reasonable amount of high-value words
   Z) combine: to one long string, asc sorting by value, with removing words found inside the newly combined string
 - evaluate gains of shuffling various similarly-valued words in order to 
 - compress initial bodies with established dictionary, report results, try different dictionaries, compare results

cache of detached entries

merge raddi::detached, raddi::noticed and raddi::subscriptions
 - maybe one base template with 3 specializations

rewrite log as noted in log.cpp or somewhere there in comment

TBD app: https://msdn.microsoft.com/en-us/library/aa767914(VS.85).aspx#app_reg
TBD www - read-only web interface

consider http server? simple GET/POST support
 - POST - new identity/channel/post/etc.
 - GET - db queries? lists of identities/channels
       - deep tree data fetch?
 - replace Source functionality?

document protocol
 - requirement: synchronized time

UCRT?
 - https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/
 - https://github.com/MicrosoftDocs/cpp-docs/blob/master/docs/c-runtime-library/crt-library-features.md

CC algo comparison
	speed	memory
matrix:	1	1	// x30 -> 14.8s		- mean
simple:	/10	×2	// x30 -> 224s
refnce:	/3	/5				- lean
cuda:	10
